name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Poetry
        run: |
          pip install poetry==1.4.0
          poetry --version
      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "sha=$(git rev-parse --verify --quiet HEAD^)" >> $GITHUB_OUTPUT
      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2
        with:
          version-command: |
            bash -o pipefail -c "poetry version | awk '{ print \$2 }'"
      - name: Bump version for developmental release
        if: "! steps.check-version.outputs.tag"
        run: |
          poetry version patch &&
          version=$(poetry version | awk '{ print $2 }') &&
          poetry version $version.dev.$(date +%s)
      - name: Build package
        run: |
          poetry build
      - name: Install package
        run: |
          poetry install
      - name: Run pytest
        run: |
          poetry run pytest --cov=sns_extended_client test --cov-report term-missing
      - name: Publish package on PyPI
        if: steps.check-version.outputs.tag
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
      - name: Publish package on TestPyPI
        if: "! steps.check-version.outputs.tag"
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
